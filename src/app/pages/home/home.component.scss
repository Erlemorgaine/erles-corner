@import "src/app/styles/mixins";
@import "src/app/styles/globals";

$title-color: rgba(255, 255, 255, 0.7);

$menu-holder-w-h: 30rem;
$slide-offset-top: -10%;
$slide-offset-x: 1%;

@keyframes colorTransition {
  from {background-position: 0}
  to {background-position: 100%}
}

@keyframes slideButtons1 {
  to { transform: translate3d(-100%, $slide-offset-top, 0) }
}

@keyframes slideButtons2 {
  45% { opacity: 1 }
  50% { transform: translate3d(calc(-150% - (#{$slide-offset-x} / 2)), $slide-offset-top, 0) }
  51% { transform: translate3d(calc(50% + #{$slide-offset-x}), $slide-offset-top, 0); opacity: 0 }
  to { transform: translate3d($slide-offset-x, $slide-offset-top, 0) }
}

@mixin slideShow($start, $animation) {
  @include center;

  height: 100%;
  width: 100%;
  transform: translate3d($start, $slide-offset-top, 0);
  animation: $animation 15s linear infinite;
  display: flex;
  align-items: flex-start;

  $btn-colors:
    1 $home-1-dark $home-1-light,
    2 $home-2-dark $home-2-light,
    3 $home-3-dark $home-3-light,
    4 $home-4-dark $home-4-light,
    5 $home-5-dark $home-5-light;

  @each $i, $color, $bgColor in $btn-colors {
    a:nth-child(#{$i}) {
      background-color: $bgColor;
      color: $color;
      transition: all .5s;

      &:hover {
        background-color: $color;
        color: white;
      }
    }
  }
}

.container {
  background-image: linear-gradient(20deg, $home-1, transparent 70%),
                    linear-gradient(60deg, $home-2, transparent 60%),
                    linear-gradient(90deg, $home-3, transparent 80%),
                    linear-gradient(180deg, $home-4, transparent 70%),
                    linear-gradient(240deg, $home-5, transparent 70%),
                    linear-gradient(300deg, $home-6, transparent 70%);
  background-size: 200% 100%;
  animation: colorTransition 4s linear infinite alternate;

  .title-wrap {
    position: relative;

    h1 {
      position: absolute;
      top: calc(50vh - #{$menu-holder-w-h} / 2);
      color: $title-color;
      filter: drop-shadow(1px 1px .75px $title-color) drop-shadow(-1px -1px .75px $title-color);
      transition: top .5s;

      &:first-child {
        left: calc(50vw - #{$menu-holder-w-h} / 2);
        transform: rotate(-45deg);
      }

      &:not(:first-child) {
        right: calc(50vw - #{$menu-holder-w-h} / 2);
        transform: rotate(45deg);
      }
    }

    .menu-holder-wrap {
      @include center;

      filter: drop-shadow(2px 2px 5px black) drop-shadow(-2px -2px 5px black);

      .menu-holder {
        width: $menu-holder-w-h;
        height: $menu-holder-w-h;
        clip-path: polygon(30% 0%, 70% 0%, 100% 30%, 100% 70%, 70% 100%, 30% 100%, 0% 70%, 0% 30%);
        background-color: rgba(0, 0, 0, 1);
        transition: width .5s, height .5s;

        .button-slide-wrap {
          position: relative;

          .button-slide-1 {
            @include slideShow($slide-offset-x, slideButtons1);
          }

          .button-slide-2 {
            @include slideShow(-100%, slideButtons2);
          }
        }
      }
    }

    @media screen and (max-width: 768px) {
      @keyframes pulsingButtons {
        to { transform: scale(1.05) }
      }

      $menu-holder-s-w-h: 20rem;
      $slide-offset-s-x: -50%;

      h1 {
        top: calc(50vh - #{$menu-holder-s-w-h} / 1.75);

        &:first-child {
          left: calc(50vw - #{$menu-holder-s-w-h} / 1.75);
        }

        &:not(:first-child) {
          right: calc(50vw - #{$menu-holder-s-w-h} / 1.75);
        }
      }

      // todo: also slideshow
      .menu-holder-wrap .menu-holder {
        width: $menu-holder-s-w-h;
        height: $menu-holder-s-w-h;

        .button-slide-wrap .button-slide {
          &-1 {
            width: fit-content;
            top: 20%;
            left: 22%;
            flex-direction: column;
            align-items: initial;
            animation: none;

            a {
              animation: pulsingButtons 1s alternate infinite;
            }
          }

          &-2 {
            visibility: hidden;
          }
        }
      }
    }
  }
}

