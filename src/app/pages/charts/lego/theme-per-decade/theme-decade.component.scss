.container {
  width: 80%;
  margin: 0 auto;
}

.theme-buttons {
  display: flex;
  justify-content: space-between;
  margin: 2rem 0;

  button {
    position: relative;
    background-color: transparent;
    display: flex;
    flex-direction: column;
    align-items: center;
    cursor: pointer;

    // Button colors
    $color-1: rgb(54,166,255);
    $color-2: rgb(255,35,196);
    $color-3: rgb(255,171,38);
    $color-4: rgb(40,176,48);
    $color-5: rgb(255,58,114);
    $color-6: rgb(94,52,255);
    $color-7: rgb(161,255,217);
    $color-8: rgb(228, 197, 209);
    $color-9: rgb(162,49,255);

    $lego-colors:
      1 $color-1,
      2 $color-2,
      3 $color-3,
      4 $color-4,
      5 $color-5,
      6 $color-6,
      7 $color-7,
      8 $color-8,
      9 $color-9;

    // Lego head size variables
    $head-w: 10.2rem;
    $head-h: 8.5rem;
    $head-top-w: 4.9rem;
    $head-top-h: 1.6rem;
    $head-top-curve: 40%;
    $eyes-from-top: 3.4rem;
    $mouth-from-bottom: 2rem;
    $eye-size: 1.25rem;

    $factor: 3;

    @mixin legoCommonVars {
      position: absolute;
      background-color: white;
    }

    @each $i, $color in $lego-colors {
      &:nth-child(#{$i}) {
        filter: drop-shadow(2px 4px 6px $color) drop-shadow(-2px -4px 6px $color);

        &:hover, &.focus {
          .head, .head .head-top {
            background-color: lighten($color, 10%);
          }
        }

        &:hover.focus {
          .head, .head .head-top {
            background-color: lighten($color, 20%);
          }
        }

        &.focus {
          label {
            border-bottom: 3px solid $color;
          }
        }
      }
    }

    .head {
      position: relative;
      background-color: white;
      width: calc(#{$head-w} / #{$factor});
      height: calc(#{$head-h} / #{$factor});
      border-radius: 10px;
      margin-bottom: .5rem;

      .head-top {
        @include legoCommonVars;

        width: calc(#{$head-top-w} / #{$factor});
        height: calc(#{$head-top-h} / #{$factor});
        top: calc(#{$head-top-h} / -#{$factor});
        right: calc((100% - #{$head-top-w} / #{$factor}) / 2);
        border-top-right-radius: $head-top-curve;
        border-top-left-radius: $head-top-curve;
      }

      .eyes {
        @include legoCommonVars;

        width: calc((#{$head-top-w} - (#{$eye-size} / #{$factor})) / #{$factor});
        left: calc((100% - ((#{$head-top-w} - (#{$eye-size} / #{$factor})) / #{$factor})) / 2);
        top: calc(#{$eyes-from-top} / #{$factor});

        .eye {
          position: absolute;
          background-color: black;
          border-radius: 50%;
          width: calc(#{$eye-size} / #{$factor});
          height: calc(#{$eye-size} / #{$factor});

          &:last-child {
            right: 0;
          }
        }
      }

      .mouth {
        $mouth-w: .5rem;
        $mouth-h: .1rem;

        position: absolute;
        bottom: calc(#{$mouth-from-bottom} / #{$factor});
        left: calc((100% - .78rem) / 2);;
        width: $mouth-w;
        height: $mouth-h;
        border: solid 2px black;
        border-top: none;
        border-radius: 0 0 160px 160px / 0 0 120px 120px;
      }
    }

    label {
      color: white;
      font-weight: bold;
      cursor: pointer;
    }
  }
}
